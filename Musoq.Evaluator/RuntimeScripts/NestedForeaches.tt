var {transformed_source_table} = new Table({transformed_table_name}, {transformed_table_columns});
var groups = new Dictionary<GroupKey, Group>();
var rootGroup = new Group(null, new string[0], new string[0]);
var usedGroups = new HashSet<Group>();
{group_fields_names}

<# for(int i = 0; i < Nesting; ++i) 
{ #>
    foreach(var {name<#=i#>} in {source<#=i#>})
    {
        <# if(i > 0) { #>
            if(!({join_condition<#=(i-1)#>}))
                continue;
        <# } #>
<# } #>
        {where_statement}
    <# if(HasGroupBy) { #>
        {group_by_statements}
    <# } else { #>
        {transformed_select_statements}
    <# } #>
<# for(int i = 1; i < Nesting - 1; ++i) { #>
    }
<# } #>
}